
datomic.otl id=g13023
	datomic.otl <url:file:///~/projects/study/clj/datomic.otl#r=g13023>
ref
	Day Of Datomic Cloud otl <url:file:///~/projects/study/clj/articles-datomic.md#r=g12849>
study-order datomic id=g12866
	Datomic Kod Okumalarından Notlar  <url:file:///~/projects/study/logbook/log_20221119.md#r=g13532>
	/Users/mertnuhoglu/prj/study/clj/ex/study_datomic/datalog-01/src/mertnuhoglu/datomic/datomic_01b.clj
	Connect to Sample Database <url:file:///~/prj/study/clj/articles-datomic.md#r=g13507>
	Datomic Documentation <url:file:///~/prj/study/logbook/log_20221107.md#r=g13500>
	REBL ile datomic verilerini dolaşma  <url:file:///~/prj/study/clj/datomic.otl#r=g13523>
	Lab: Assertion Tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g13506>
	Code - Assertion and Read Tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g13509>
	Example: Day of Datomic Cloud Sample Data <url:file:///~/prj/study/clj/articles-datomic.md#r=g13521>
	Article: mbrainz tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g12871>
	/Users/mertnuhoglu/projects/study/clj/ex/study_datomic/datalog-01/README.md
	Norbert Wojtowicz - Modeling your domain (Lambda Days 2016) - YouTube <url:file:///~/prj/study/logbook/log_20220927.md#r=g13409>
pnt
	Datomic Kod Okumalarından Notlar  <url:file:///~/projects/study/logbook/log_20221119.md#r=g13532>
	Example: Get Current Datomic Schema <url:file:///~/prj/study/clj/articles-datomic.md#r=g13527>
	REBL ile datomic verilerini dolaşma  id=g13523
		REBL ile datomic verilerini dolaşma #datomic #clj <url:file:///~/projects/study/logbook/log_20221116.md#r=g13522>
		pre:
			run repl + Rebl + portal <url:file:///~/prj/study/clj/datomic.otl#r=g12891>
		repl içinde:
doc
	Console UI
		run datomic console id=g12858
			ref
				~/codes/clj/content/day-of-datomic/README.md
				~/codes/clj/content/day-of-datomic/tutorial/hello_world.clj
				[Run a Transactor | Datomic](https://docs.datomic.com/on-prem/getting-started/transactor.html#run-dev-transactor)
			tüm işlemler datomic-pro klasörü altında:
				cd /Users/mertnuhoglu/codes/clj/lib/datomic-pro-1.0.6397
			step01:
				bin/transactor -Ddatomic.printConnectionInfo=true config/dev-transactor-template.properties
			step02 (optional):
				lein repl
				bin/repl
				:ConjureConnect
			step03:
				bin/console -p 8080 dev datomic:dev://localhost:4334/
				error: hata verirse, farklı bir port dene
				http://localhost:8080/browse
my questions
	Client vs Peer vs Transactor
		Datomic Local Dev
			ref: [Local Dev and CI with dev-local | Datomic](https://docs.datomic.com/cloud/dev-local.html)
			İlk başta bununla başlamayı tavsiye ediyorlar
			Client API erişimi var
			Cloud kullanırken bunu lokalde geliştirmede kullanıyorsun
		Datomic On-Prem
			Bu da iki türlü yapılabiliyor:
			in-process peer library
			remote client to a peer server
issues
	run repl + Rebl + portal id=g12891
		ref: multiple repls together: <url:file:///~/projects/study/clj/clojure.otl#r=g12447>
		prerequisite: 
			deps.edn configuration <url:file:///~/projects/study/clj/datomic.otl#r=g12890>
		clojure -M:lib/cider-nrepl:inspect/rebl15:middleware/nrebl:inspect/portal-cli
		vim: :ConjureConnect
		cursive: Remote nREPL Connection <url:file:///~/projects/study/clj/clojure.otl#r=g12889>
	deps.edn configuration id=g12890
		ref: ~/codes/clj/ex/day-of-datomic-cloud/deps.edn
		com.datomic/dev-local {:mvn/version "0.9.225"}
		com.datomic/datomic-pro {:mvn/version "0.9.5951"}
		:mvn/repos {"datomic-cloud" {:url "s3://datomic-releases-1fc2183a/maven/releases"}}
	def uri examples id=g12896
		(def uri "datomic:dev://localhost:4334/<database-name>")
		(def uri "datomic:dev://localhost:4334/mbrainz-1968-1973")
		(def uri "datomic:mem://trial")
		(def uri "datomic:mem://movies")
	repl code connection id=g12892
		(require '[datomic.api :as d])
		ref: def uri examples <url:file:///~/projects/study/clj/datomic.otl#r=g12896>
			(def uri "datomic:dev://localhost:4334/mbrainz-1968-1973")
		(def conn (d/connect uri))
		(def db (d/db conn))
	hodur ile datomic schema tanımlama id=g12901
		ref
			~/projects/study/clj/ex/study_datomic/hodur01/src/mert/hodur01.clj
			[hodur-org/hodur-engine](https://github.com/hodur-org/hodur-engine)
			[hodur-org/hodur-visualizer-schema](https://github.com/hodur-org/hodur-visualizer-schema)
articles - datomic id=g13413
	rfr
		<url:vimscript::UtlOpenFileAndSearch>
	ndx
		datomic okuma planı 20221113  <url:file:///~/prj/myrepo/work/work4.otl#r=g13517>
	read id=g13520
		Example: Day of Datomic Cloud Sample Data <url:file:///~/prj/study/clj/articles-datomic.md#r=g13521>
		20221114 
		Article: The Datomic Information Model by Rich Hickey <url:file:///~/prj/study/clj/articles-datomic.md#r=g13516>
		The Design of Datomic - Rich Hickey - YouTube <url:file:///~/projects/study/logbook/log_20221112.md#r=g13515>
		Video: Day of Datomic Cloud - Day 4 <url:file:///~/prj/study/clj/articles-datomic.md#r=g13514>
		Lab: Accumulate, Read, Retract, History  <url:file:///~/prj/study/clj/articles-datomic.md#r=g13511>
		Day of Datomic Cloud - Session 3 - YouTube <url:file:///~/prj/study/clj/articles-datomic.md#r=g13510>
		Code - Assertion and Read Tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g13509>
		Lab: Assertion Tutorial <url:file:///~/projects/study/clj/articles-datomic.md#r=g13506>
		Day of Datomic Cloud - Session 1 - YouTube <url:file:///~/projects/study/clj/articles-datomic.md#r=g13502>
		20221112 
		Day Of Datomic Cloud <url:file:///~/projects/study/clj/articles-datomic.md#r=g12849>
		Datomic Documentation <url:file:///~/projects/study/logbook/log_20221107.md#r=g13500>
		20221107
		Reactive Datalog for Datomic - Nikolas Göbel - YouTube <url:file:///~/projects/study/logbook/log_20221002.md#r=g13434>
		Datascript and Datomic: Data Modeling for Heroes - Mark Bastian - YouTube <url:file:///~/projects/study/logbook/log_20220930.md#r=g13424>
		20220930 
		Norbert Wojtowicz - Modeling your domain (Lambda Days 2016) - YouTube <url:file:///~/prj/study/logbook/log_20220927.md#r=g13409>
		20220928 
		Babashka Datalevin (datalog) example <url:file:///~/prj/study/clj/babashka_interpreter.md#r=g13410>
		kristianmandrup/datascript-tutorial: Datascript and Datomic tutorial book <url:file:///~/projects/study/logbook/log_20220924.md#r=g13401>
		20220924 
		Val on Programming: DataScript as a Lingua Franca for domain modeling <url:file:///~/projects/study/logbook/log_20220921.md#r=g13389>
		20220921 
		Val on Programming: Datomic: Event Sourcing without the hassle <url:file:///~/projects/study/logbook/log_20220916.md#r=g13382>
		20220919 
		Referentially transparent CRUD <url:file:///~/prj/study/logbook/log_20220910.md#r=g13339>
		20220912 
		Article: Datomic from the ground up - subhash <url:file:///~/prj/study/clj/articles-datomic.md#r=g12895>
		Article: Hodur: Declarative Domain Modeling for Datomic Ion/Cloud - Tiago Luchini - YouTube <url:file:///~/prj/study/clj/articles-datomic.md#r=g12893>
		Article: Day of Datomic tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g12865>
		Article: mbrainz tutorial <url:file:///~/prj/study/clj/articles-datomic.md#r=g12871>
		Article: rebel ile datomic kullanımı <url:file:///~/prj/study/clj/articles-datomic.md#r=g12873>
		Article: Datomic: Look at all the things I'm not doing! (Cont.) (August Lilleaas' blog) <url:file:///~/prj/study/clj/articles-datomic.md#r=g12883>
		Article: What Datomic brings to businesses | by Val Waeselynck | Medium <url:file:///~/prj/study/clj/articles-datomic.md#r=g12884>
		Article: Val on Programming: Using Datomic in your app: a practical guide <url:file:///~/prj/study/clj/articles-datomic.md#r=g12886>
		Article: Separation of Concerns in Datomic Query: Datalog Query and Pull Expressions <url:file:///~/prj/study/clj/articles-datomic.md#r=g12885>
		Article: Datomic Cheat Sheet Series - Queries (Part 4) - Pull - Curious... <url:file:///~/prj/study/clj/articles-datomic.md#r=g12887>
reference functions
	ref: datalog ref <url:file:///~/projects/study/clj/clojure.otl#r=g12868>
resources datomic id=g12880
	[Introduction | Datomic](https://docs.datomic.com/on-prem/tutorial/introduction.html)
	[Datomic Cloud Documentation](https://docs.datomic.com/)
	[Datomic/mbrainz-sample: Example queries and rules for working with the Datomic mbrainz example database](https://github.com/Datomic/mbrainz-sample)
		rfr: mbrainz tutorial <url:file:///~/prj/study/clj/datomic.otl#r=g12871>
	[markbastian/datascript-playground](https://github.com/markbastian/datascript-playground)
	[Datomic/day-of-datomic: Sample Code for Day of Datomic presentation](https://github.com/Datomic/day-of-datomic)
	[Max Datom - Interactive Datomic Tutorial](https://max-datom.com/)
	[Learn Datalog Today!](http://www.learndatalogtoday.org/)
explorations xpl id=g12904
	Datomic Veri Modeli id=g12905
		Notation conventions: id=g12907
			t, y: entity types
			e_t1: entity 1 of type t
			e_y1: entity 1 of type y
			[e_t1] :t/k -> [e_y1]: e_t1's :t/k key has the value e_y1 (or relation from e_t1 to e_y1 through :t/k)
		:db.install/attribute
			Her attribute içinde `:db.install/_attribute :db.part/db` ikilisi var.
			Örnek:
				(d/transact conn [{:db/id #db/id[db.part/db] :db/ident :job/title :db/valueType :db.type/string :db/cardinality :db.cardinality/one :db.install/_attribute :db.part/db}])
				(d/transact conn [{:db/id #db/id[db.part/db] :db/ident :job/salary :db/valueType :db.type/double :db/cardinality :db.cardinality/one :db.install/_attribute :db.part/db}])
			Underscore, ters referans (reverse reference) demektir.
			Demek ki, `:db.part/db` varlığından bu atributlara bir ref var.
			Örnek:
				:db.part/db -----> :job/title
			Bu ref `:db:install/attribute` öğesi üzerinden gerçekleşiyor olmalı.
			Örnek:
				:db.part/db
					:db:install/attribute [:job/title :job/salary]
		:db/ident
		kısaltmalar
			:dpd = :db.part/db
			:dia = :db.install/attribute
			:dvt = :db/valueType
			:did = :db/ident
			:dtr = :db.type/ref
		örnek:
			ref: 
				qry05b: valueType = ref olan tüm atributları çıkartalım <url:file:///~/projects/study/clj/ex/study_datomic/datalog-01/src/mertnuhoglu/metamodel/e01.clj#r=g12902>
				qry03 mbrainz içindeki tüm ref tipindeki atributlar <url:file:///~/projects/study/clj/ex/study_datomic/datalog-01/src/mertnuhoglu/mbrainz/e01.clj#r=g12903>
			{:dpd {:dia [ae1 ae2]}}
			{ae1 {:dvt te1}}
			{te1 {:did :dtr}}
		okunuşu:
			{..} her biri bir entity.
			ae1, te1: bir entity idsi
		Neden sorguların sonrasında bir varlığı çekmek için `ffirst` kullanılıyor?
			Örnek:
				(def dylan-harrison-cd (ffirst (d/q '[:find ?medium
																							:in $ ?release
																							:where
																							[?release :release/media ?medium]]
																				db0 (java.util.ArrayList. dylan-harrison-sessions))))
			Yanıt: Çünkü iki seviyeli içiçe bir liste dönüyor sorgulamalar. Neden iki seviyeli? Çünkü ilk seviye liste, farklı satırlara karşılık geliyor. Her bir satır ise `find` içinde projeksiyonu yapılan `?medium` gibi değişkenlere karşılık geliyor. Dolayısıyla her bir satır içinde de bir liste olmalı. 
		Datomic sorgularına gönderilen argümanlar sadece clj objeleri değil, java objeleri de olabilir.
			Örnek: Burada `ArrayList` gönderilmiş:
				(def dylan-harrison-cd (ffirst (d/q '[:find ?medium
																							:in $ ?release
																							:where
																							[?release :release/media ?medium]]
																				db0 (java.util.ArrayList. dylan-harrison-sessions))))
		Belli bir varlığı çekmek için, tekil atributlardan bir tanesiyle sorgulama yapılmalı:
			Örnek:
				(def led-zeppelin [:artist/gid #uuid "678d88b2-87b0-403b-b63d-5da7465aecc3"])
				(d/pull db0 [:artist/name :artist/startYear] led-zeppelin)
		Reverse Lookup id=g12908
			Örnek:
				[?e :t/_k e_y1] ; => [e_t1]   | Reverse Lookup
				[e_t1 :t/k ?e]  ; => [e_y1]   | Forward Lookup
				(:t/k e_t1)     ; => [e_y1]   | Map Keyword Lookup
			Soyut Tanım:
				Reverse Lookup: Bir e_y1 varlığına :t/k üzerinden ref veren tüm varlıkları bul
				Forward Lookup: Bir e_t1 varlığının :t/k üzerinden referansları
			Yuvarlak Açıklama:
				Reverse Lookup: Bir e'ye ref veren tüm varlıklar
				Forward Lookup: Bir e'nin ref verdiği tüm varlıklar
logbook
	Datomic Kod Okumalarından Notlar  <url:file:///~/projects/study/logbook/log_20221119.md#r=g13532>
	20221119 id=g13531
		(d/transact)
			(d/transact conn {:tx-data [[:db/add eid :inv/count 100]]})
			[:db/add "datomic.tx" :db/doc "correct data entry"]
			[:db/add [:inv/sku "SKU-21"] <attribute> <value>]
		



