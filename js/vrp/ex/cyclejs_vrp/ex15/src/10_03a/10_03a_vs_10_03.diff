diff --git a/src/10_03a/10_03a_vs_10_03.diff b/src/10_03a/10_03a_vs_10_03.diff
new file mode 100644
index 0000000..e69de29
diff --git a/src/10_03/components/app/import_jquery.ts b/src/10_03a/components/app/import_jquery.ts
index d936ba9..571eb81 100644
--- a/src/10_03/components/app/import_jquery.ts
+++ b/src/10_03a/components/app/import_jquery.ts
@@ -1,6 +1,6 @@
-import jquery from "jquery"
-export default (window.$ = window.jQuery = jquery)
-import 'bootstrap'
-import 'bootstrap/dist/css/bootstrap.min.css'
-import 'handsontable'
-import 'handsontable/dist/handsontable.full.min.css'
+//import jquery from "jquery"
+//export default (window.$ = window.jQuery = jquery)
+//import 'bootstrap'
+//import 'bootstrap/dist/css/bootstrap.min.css'
+// import 'handsontable'
+// import 'handsontable/dist/handsontable.full.min.css'
diff --git a/src/10_03/components/app/index.ts b/src/10_03a/components/app/index.ts
index e87a9e5..ce32098 100644
--- a/src/10_03/components/app/index.ts
+++ b/src/10_03a/components/app/index.ts
@@ -19,6 +19,12 @@ export type Reducer = (prev?: State) => State | undefined
 
 export default function main(sources: Sources): Sinks {
   const state$ = sources.onion.state$
+  state$.addListener({
+    next: i => console.log(`state:: ${JSON.stringify(i)}`),
+    error: err => console.error(err),
+    complete: () => console.log('s1 completed'),
+  })
+
   const headerSinks = isolate(Header, {storage: null, onion: null, Hot: null})(sources)
   const planPanelSinks = isolate(PlanPanel, {storage: null, onion: planPanelLens, Hot: null})(sources)
   const detailPanelSinks = isolate(DetailPanel, {storage: null, onion: null, Hot: null})(sources)
@@ -47,9 +53,9 @@ export default function main(sources: Sources): Sinks {
 
   const hot$ = detailPanelSinks.Hot
   const sinks: any = {
-    DOM: vdom$,
+    //DOM: vdom$,
     HTTP: requests$,
-    Hot: hot$,
+    //Hot: hot$,
     onion: reducer$,
   }
   return sinks;
diff --git a/src/10_03/components/detail_panel/index.ts b/src/10_03a/components/detail_panel/index.ts
index 02117df..a692de4 100644
--- a/src/10_03/components/detail_panel/index.ts
+++ b/src/10_03a/components/detail_panel/index.ts
@@ -1,7 +1,7 @@
 import xs from 'xstream';
 import {a, article, br, button, div, form, h3, input, label, li, span, sup, table, tbody, td, th, thead, tr, ul} from '@cycle/dom';
 import { style } from 'typestyle';
-import 'handsontable'
+// import 'handsontable'
 
 const styles = style({
 });
diff --git a/src/10_03/drivers/hot_driver.js b/src/10_03/drivers/hot_driver.js
deleted file mode 100644
index 943598b..0000000
--- a/src/10_03/drivers/hot_driver.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import xs from 'xstream'
-const Handsontable = require('handsontable/dist/handsontable.full.min.js')
-
-export default function makeHotDriver(mount_id, initial_data) {
-  var hot;
-  var container = document.querySelector(mount_id);
-  hot = new Handsontable(container, {
-    minSpareRows: 1,
-    contextMenu: true,
-  });
-  return function HotDriver(data$) {
-    data$.addListener({
-      next: data => {
-        hot.loadData(data)
-      }}
-    )
-    var producer = {
-      start: function(observer) {
-        hot.addHook('afterChange', function () {
-          console.log("changed")
-          observer.next(hot.getSourceData())
-        })
-      },
-      stop: function () {
-        console.log("stopped")
-      }
-    }
-    const HotSource = xs.create(producer)
-    return HotSource
-  }
-}
diff --git a/src/10_03/index.ts b/src/10_03a/index.ts
index e6183d5..6aaf04a 100644
--- a/src/10_03/index.ts
+++ b/src/10_03a/index.ts
@@ -1,19 +1,16 @@
-import xs from 'xstream'
+import { makeHTTPDriver } from '@cycle/http';
 import { run } from '@cycle/run';
-import { makeDOMDriver } from '@cycle/dom';
-import {makeHTTPDriver} from '@cycle/http';
-import makeHotDriver from './drivers/hot_driver';
 import onionify from 'cycle-onionify';
-
+// import 'handsontable/dist/handsontable.full.min.css';
 import App from './components/app';
-import 'handsontable/dist/handsontable.full.min.css'
+
 
 const main: any = onionify(App);
 
 const drivers = {
-  DOM: makeDOMDriver('#app'),
+  // DOM: makeDOMDriver('#app'),
   HTTP: makeHTTPDriver(),
-  Hot: makeHotDriver("#example", [[]]),
+  // Hot: makeHotDriver("#example", [[]]),
 };
 
 run(main, drivers);
diff --git a/src/10_03/interfaces.ts b/src/10_03a/interfaces.ts
index cb1f361..34db84a 100644
--- a/src/10_03/interfaces.ts
+++ b/src/10_03a/interfaces.ts
@@ -1,4 +1,4 @@
-import { DOMSource } from '@cycle/dom';
+//import { DOMSource } from '@cycle/dom';
 import { HTTPSource } from '@cycle/http';
 import { StorageSource } from '@cycle/storage';
 import { TimeSource } from '@cycle/time';
@@ -7,7 +7,7 @@ import xs from 'xstream';
 import { State } from './components/app';
 
 export type Sources = {
-  DOM: DOMSource;
+  //DOM: DOMSource;
   onion: StateSource<State>;
   HTTP: HTTPSource;
   Time: TimeSource;
@@ -33,4 +33,4 @@ export type PurchaseOrder = {
   company_id: number
   order_extid: string
   company_exti: string
-}
\ No newline at end of file
+}
